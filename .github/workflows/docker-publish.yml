# for NordVPN
name: Docker Publish

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
  schedule:
    - cron: '59 00 * * *'
  release:
    types: [published]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # name of image
  IMAGE: nordvpn
  # github.repository as <account>/<repo>
  IMAGE_NAME: tmknight88/nordvpn
  # Build args
  BUILD_ARGS: |
    "UBUNTU_VER=${{ vars.UBUNTU_VER }}"

jobs:
  nordvpn-version:
    name: "NordVPN Version"
    runs-on: "ubuntu-latest"
    outputs:
      nordvpn-version: ${{ steps.get-version.outputs.NORDVPN_VERSION }}
    steps:
      - name: "Get version"
        id: "get-version"
        shell: "bash"
        run: |
          endpoint="https://repo.nordvpn.com/deb/nordvpn/debian/pool/main/";
          html=$(curl -s "${endpoint}");
          most_recent_file=$(echo "${html}" | grep -o "<a href=\"[^\"]*_amd64.deb\"" | sed 's/<a href="//' | sed 's/">.*//' | sed 's/"$//' | sort | tail -n 1);
          echo NORDVPN_VERSION=$(echo $most_recent_file | sed 's/nordvpn_//' | sed  "s/_amd64.deb//") >> $GITHUB_OUTPUT

  build:
    needs: nordvpn-version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup QEMU for multi-arch
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,enable=${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }},value=latest

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: ${{ env.IMAGE }}.dockerfile
          build-args: |
            ${{ env.BUILD_ARGS }}
            NORDVPN_VERSION=${{ needs.nordvpn-version.outputs.nordvpn-version }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
