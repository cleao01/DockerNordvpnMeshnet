#!/bin/bash
shopt -s nocasematch

## Set iptables
## NET_LOCAL is blocked until VPN connected
00-firewall

## Establish network support
10-inet
## IPv6 support desired
netipv6=$(dockerNetworks6)
[[ -n ${netipv6} ]] && 10-inet6

## if not using Nordlynx
[[ ${TECHNOLOGY} != "NordLynx" ]] && 20-tun

## Start nordvpn daemon
rm /run/nordvpn/* 2>/dev/null
nordvpnd >/dev/null &
while [ ! -S /run/nordvpn/nordvpnd.sock ]
do
    echo -e "$(date "+%F %T%z")\tINFO\tWaiting for nord daemon to start..."
    sleep 2s
done

## Start nordvpn
echo -e "$(date "+%F %T%z")\tINFO\tConfiguring and connecting NordVPN..."
echo "########################"
## Client information
nordvpn version | grep -Eiv "new feature"
## Nord firewall always off at this step to allow for filters
nordvpn set firewall false > /dev/null
nordvpn set killswitch false > /dev/null
## Apply user settings
nord_config || exit $?
nord_login || exit $?
nord_connect "${CONNECT}" || exit $?
nord_firewall || exit $?
echo "########################"

## Allow NET_LOCAL traffic
30-route
## IPv6 support desired
[[ -n ${netipv6} ]] && 30-route6 >/dev/null

## Allow unsecured traffic to declared domains
[[ -n ${BYPASS_LIST} ]] && 40-bypasslist

## Expose private key with Wireguard
[[ $(which wg) ]] && nord_migrate

## Long run script
echo -e "$(date "+%F %T%z")\tINFO\tStartup complete"
if [ "${CHECK_CONNECTION_INTERVAL:-60}" -ne 0 ]
then
    nord_watch &
fi
wait $!
CODE=$?
nordvpn logout --persist-token > /dev/null 2>&1
exit $CODE
