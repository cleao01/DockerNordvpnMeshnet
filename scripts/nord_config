#!/bin/bash
shopt -s nocasematch

## Apply settings
[[ -n ${DNS} ]] && nordvpn set dns "${DNS//[;,]/ }" | grep -Eiv -f /opt/inv-grep
[[ -n ${CYBER_SEC} && ${CYBER_SEC} =~ (true|false) ]] && nordvpn set cybersec "${CYBER_SEC}" | grep -Eiv -f /opt/inv-grep
[[ -n ${OBFUSCATE} && ${OBFUSCATE} =~ (true|false) ]] && nordvpn set obfuscate "${OBFUSCATE}" | grep -Eiv -f /opt/inv-grep
if [[ ! ${TECHNOLOGY:-NordLynx} =~ (NordLynx|OpenVPN) ]]
then
  echo -e "WARNING\tUnsupported TECHNOLOGY value (${TECHNOLOGY}); defaulting to 'NordLynx'."
  TECHNOLOGY="NordLynx"
fi
nordvpn set technology "${TECHNOLOGY:-NordLynx}" | grep -Eiv -f /opt/inv-grep
[[ -n ${PROTOCOL} && ${PROTOCOL} =~ (udp|tcp) ]] && nordvpn set protocol "${PROTOCOL}" | grep -Eiv -f /opt/inv-grep

## NordVPN firewall enabled by default unless BYPASS_LIST set
## Be warned that FIREWALL = true conflicts with BYPASS_LIST,
## thus if BYPASS_LIST declared, FIREWALL automatically set to false
if [[ -z ${FIREWALL} && -z ${BYPASS_LIST} ]]
then
  FIREWALL=true
elif [[ -n ${BYPASS_LIST} ]]
then
  if [[ -n ${FIREWALL} ]]
  then
    ## If BYPASS_LIST, disable nord firewall, regardless if declared
    echo -e "WARNING\tUse of BYPASS_LIST overrides FIREWALL; FIREWALL value will not be honored."
    echo -e "INFO\tUsing iptables in place of NordVPN firewall."
  fi
  FIREWALL=false
else
## Ensure FIREWALL true/false
  if [[ ! ${FIREWALL:-true} =~ (true|false) ]]
  then
    echo -e "WARNING\tNon-boolean FIREWALL value (${FIREWALL}); defaulting to 'true'."
    FIREWALL=true
  fi
fi
nordvpn set firewall "${FIREWALL:-true}" | grep -Eiv -f /opt/inv-grep

## FIREWALL must be enabled to enable KILLSWITCH
## Enabled by default
if [[ "${FIREWALL}" == "true" ]]
then
## Ensure KILLSWITCH true/false
  if [[ ! ${KILLSWITCH:-true} =~ (true|false) ]]
  then
    echo -e "WARNING\tNon-boolean KILLSWITCH value (${KILLSWITCH}); defaulting to 'true'."
    KILLSWITCH=true
  fi
  nordvpn set killswitch "${KILLSWITCH:-true}" | grep -Eiv -f /opt/inv-grep
fi

[[ -n ${PORTS} ]] && for port in ${PORTS//[;,]/ }
do
  nordvpn whitelist add port "${port}" | grep -Eiv -f /opt/inv-grep
done
[[ -n ${PORT_RANGE} ]] && nordvpn whitelist add ports "${PORT_RANGE}" | grep -Eiv -f /opt/inv-grep

## Whitelist local IPv4 networks
netReg="${dnsReg}/[0-9]{1,2}"
docker_networks=$(dockerNetworks)
if [[ -n ${docker_networks} ]]
then
  IFS=',' read -ra networks <<< "$docker_networks"
  for net in "${networks[@]}"
  do
    network=($net)
    nordvpn whitelist add subnet "${network[1]}" | grep -Eiv -f /opt/inv-grep
  done
fi
[[ -n ${NETWORK} && -z ${NET_LOCAL} ]] && NET_LOCAL=${NETWORK}
[[ -n ${NET_LOCAL} && ${NET_LOCAL} =~ ${netReg} ]] && for net in ${NET_LOCAL//[;,]/ }
do
  nordvpn whitelist add subnet "${net}" | grep -Eiv -f /opt/inv-grep
done
exit 0
